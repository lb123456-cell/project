package com.example.backend.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.backend.entity.Message;
import com.example.backend.requestmodels.AdminQuestionRequest;
import com.example.backend.service.MessagesService;
import com.example.backend.utils.ExtractJWT;

@CrossOrigin(origins = "http://localhost:3000") // ✅ Fixed CrossOrigin syntax
@RestController
@RequestMapping("/api/messages")
public class MessagesController {

    private final MessagesService messagesService; // ✅ Added type

    @Autowired
    public MessagesController(MessagesService messagesService) { // ✅ Fixed parameter type
        this.messagesService = messagesService;
    }

    @PostMapping("/secure/add/message")
    public void postMessage(
            @RequestHeader(value = "Authorization") String token,
            @RequestBody Message messageRequest) {
        String userEmail = ExtractJWT.payLoadJWTExtraction(token, "sub");
        messagesService.postMessage(messageRequest, userEmail);
    }
    
    @PutMapping("secure/admin/message")
    public void putMessage(@RequestHeader(value="Authorization")String token,
    						@RequestBody AdminQuestionRequest adminQuestionRequest) throws Exception {
    	String userEmail = ExtractJWT.payLoadJWTExtraction(token, "sub");
    	String admin = ExtractJWT.payLoadJWTExtraction(token, "userType");
    	if (admin == null || !admin.equals("admin")){
    		throw new Exception("Administration page only.");
    	}
    	messagesService.putMessage(adminQuestionRequest, userEmail);
    }
}

