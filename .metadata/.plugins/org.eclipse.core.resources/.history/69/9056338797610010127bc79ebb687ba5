package com.example.backend.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.data.rest.core.config.RepositoryRestConfiguration;
import org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer;
import org.springframework.http.HttpMethod;
import org.springframework.web.servlet.config.annotation.CorsRegistry;

import com.example.backend.entity.Jewelry;

@Configuration
public class MyDataRestConfig implements RepositoryRestConfigurer {

    private String theAllowedOrigins = "http://localhost:3000";

    @Override
    public void configureRepositoryRestConfiguration(RepositoryRestConfiguration config, 
                                                     CorsRegistry cors) {

        HttpMethod[] theUnsupportedActions = {
            HttpMethod.POST,
            HttpMethod.PATCH,
            HttpMethod.DELETE,
            HttpMethod.PUT
        };

        config.exposeIdsFor(Jewelry.class);

        // Pass the correct config object here
        disableHttpMethods(Jewelry.class, config, theUnsupportedActions);

        /* Configure CORS Mapping */
        cors.addMapping(config.getBasePath() + "/**")
            .allowedOrigins(theAllowedOrigins)
            .allowedMethods("GET", "OPTIONS")
            .allowCredentials(true);
    }

    private void disableHttpMethods(Class theClass,
                                    RepositoryRestConfiguration config,
                                    HttpMethod[] theUnsupportedActions) {

        config.getExposureConfiguration()
            .forDomainType(theClass)
            .withItemExposure((metadata, httpMethods) ->
                httpMethods.disable(theUnsupportedActions))
            .withCollectionExposure((metadata, httpMethods) ->
                httpMethods.disable(theUnsupportedActions));
    }
}
