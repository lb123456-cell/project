package com.example.backend.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.backend.dao.JewelryRepository;
import com.example.backend.entity.Jewelry;
import com.example.backend.requestmodels.AddJewelryRequest;

@Service
@Transactional
public class AdminService {
	
	private JewelryRepository jewelryRepository;
	
	@Autowired
	public AdminService (JewelryRepository jewelryRepository) {
		this.jewelryRepository = jewelryRepository;
	}
	
	public void increaseJewelryQuantity(Long jewelryId) throws Exception {
		
		Optional<Jewelry> jewelry = jewelryRepository.findById(jewelryId);
		
		if(!jewelry.isPresent()) {
			throw new Exception("jewelry not found");
		}
		
		jewelry.get().setRemaining(jewelry.get(),getRemaining()+ 1);
		jewelry.get().setQuantity(jewelry.get().getQuantity()+ 1);
		
		jewelryRepository.save(jewelry.get());
	}
	
	public void postJewelry(AddJewelryRequest addJewelryRequest) {
		Jewelry jewelry = new Jewelry();
		jewelry.setName(addJewelryRequest.getName());
		jewelry.setBrand(addJewelryRequest.getBrand());
		jewelry.setDescription(addJewelryRequest.getDescription());
		jewelry.setStockQuantity(addJewelryRequest.getStockQuantity());
		jewelry.setCategory(addJewelryRequest.getCategory());
		jewelry.setPrice(addJewelryRequest.getPrice());
		jewelry.setImg(addJewelryRequest.getImg());
		jewelryRepository.save(jewelry);
		
	}
}
